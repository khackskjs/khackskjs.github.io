{"meta":{"title":"sVeloper's","subtitle":"철인 뛰는 개발자","description":"그대여, 너무 걱정하지 말아요. 지나간 것은 지나간대로 그런 의미가 있죠","author":"Robert Kim","url":"http://khackskjs.github.io"},"pages":[],"posts":[{"title":"hexo, markdown syntax","slug":"hexo-markdown-syntax","date":"2017-06-30T14:13:04.000Z","updated":"2017-07-19T12:32:18.000Z","comments":true,"path":"2017/06/30/hexo-markdown-syntax/","link":"","permalink":"http://khackskjs.github.io/2017/06/30/hexo-markdown-syntax/","excerpt":"","text":"유용한 markdown 문법Code1234# 3 backticks'''[language] [title] [url] [link text]code snippet''' YouTubevideo_id: 유튜브에서 공유를 누른 후 나오는 URL 123&#123;% youtube video_id %&#125;# example&#123;% youtube q8GJh96pNu4 %&#125; Insert Postslug: 포스트 제목. 일자를 제외한 파일 제목.post_path: 해당 포스트의 URL 주소가 표시 됨post_link: 해당 포스트의 링크가 표시 됨 1234# Path&#123;% post_path slug %&#125;# Link&#123;% post_link slug [title] %&#125; Imagenew post 폴더별 설정 후 123456![&#123;description&#125;](&#123;Image path&#125;)# or&#123;% asset_img IMG_3391.JPG hi %&#125;# example![this is my picture](Its_me.jpg)","categories":[{"name":"blog","slug":"blog","permalink":"http://khackskjs.github.io/categories/blog/"}],"tags":[{"name":"tip","slug":"tip","permalink":"http://khackskjs.github.io/tags/tip/"}]},{"title":"tag_test","slug":"tag-test","date":"2017-06-24T12:32:56.000Z","updated":"2017-07-19T12:28:19.000Z","comments":true,"path":"2017/06/24/tag-test/","link":"","permalink":"http://khackskjs.github.io/2017/06/24/tag-test/","excerpt":"","text":"tag test 1&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125; test.js123function tset() &#123; console.log('hi')&#125; test.js123function tset() &#123; console.log('hi')&#125;","categories":[{"name":"-test","slug":"test","permalink":"http://khackskjs.github.io/categories/test/"}],"tags":[{"name":"-test","slug":"test","permalink":"http://khackskjs.github.io/tags/test/"}]},{"title":"블로그 시작 환경 설정 (Hexo, github pages)","slug":"Setting-Hexo-github-pages","date":"2017-06-21T15:05:33.000Z","updated":"2017-06-26T14:09:43.000Z","comments":true,"path":"2017/06/22/Setting-Hexo-github-pages/","link":"","permalink":"http://khackskjs.github.io/2017/06/22/Setting-Hexo-github-pages/","excerpt":"","text":"순서는 크게 아래 3단계 hexo 설치 및 정적 페이지 생성 github repository &amp; Disqus ID 생성 github 연동 및 Disqus 설정 후 배포 Let’s just Follow me. npm이 설치 되어 있지 않으면 node.js를 설치하면 npm이 설치된다. 1. hexo 설치 및 정적 페이지 생성설치1&gt; npm install -g hexo-cli hexo 프로젝트 생성 및 dependency download123&gt; hexo init \"sVeloperBlog\"&gt; cd sVeloperBlog&gt; npm install 포스트 파일 생성123&gt; hexo new \"first post\"# or&gt; hexo n \"first post\" /source/_post/first-post.md 가 생성됨 예제 포스트first-post.md12345678910111213141516# First postIt's my first post!## Introduce myselfHello I'm Robert Kim.## more..My Hobby List- swimming- cycling- watching movie- etc. 포스트 확인123&gt; hexo server# or&gt; hexo s 일반적으로 http://localhost:4000 으로 확인 가능하며, command line output 으로 주소 확인 가능. 정적 페이지 생성123&gt; hexo generate# or&gt; hexo g /blog/public/에 실제 호스팅에 사용할 웹 페이지 생성 됨 Notice정적 페이지에 변경이 제대로 반영되지 않을 경우 hexo clean 후 hexo generate 2. github repository &amp; Disqus ID 생성github repositorygithub로 이동 후 가입 &amp; 로그인 한다. 우상단의 New repository를 선택한다. Repository name에 본인의 {github ID}.github.io 로 입력한 후 Create repository선택.(이미 이 블로그가 khackskjs.github.io를 사용하고 있어서 already exists) Disqus ID추후 추가. 3. github 연동 및 Disqus 설정 후 배포1&gt; npm i hexo-deployer-git --save GitHub 계정 및 disqus의 shortname 을 입력한다. ./_config.yml123456789# URLurl: http://&#123;github_id&#125;.github.io/# Deploymentdeploy: type: git repo: https://github.com/&#123;github_id&#125;/&#123;github_id&#125;.github.io branch: master# for Disqusdisqus_shortname: sveloper 123&gt; hexo deploy# or&gt; hexo d 기본적인 사용은 위의 포스팅을 따르면 문제 없을 것이다. (Disqus는 추후..) 좀 더 고급진(?) 사용을 원한다면 아래 링크들을 참조 하길 바란다. Tag Pluginshexo.io","categories":[{"name":"Blog","slug":"Blog","permalink":"http://khackskjs.github.io/categories/Blog/"},{"name":"Hexo","slug":"Blog/Hexo","permalink":"http://khackskjs.github.io/categories/Blog/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://khackskjs.github.io/tags/Hexo/"},{"name":"Environment","slug":"Environment","permalink":"http://khackskjs.github.io/tags/Environment/"},{"name":"Follow me","slug":"Follow-me","permalink":"http://khackskjs.github.io/tags/Follow-me/"}]},{"title":"Ground Rule","slug":"Ground-Rule","date":"2017-06-21T14:49:01.000Z","updated":"2017-06-21T15:04:44.000Z","comments":true,"path":"2017/06/21/Ground-Rule/","link":"","permalink":"http://khackskjs.github.io/2017/06/21/Ground-Rule/","excerpt":"","text":"나의 Posting에 공통으로 적용 할 알아두면 좋을 규칙들 Shell Command 아래 소스코드에서 &gt;는 windows, $는 Linux 계열의 shell에 입력함을 의미한다. (간혹 필요할 경우, 입력 결과도 넣을 예정) 12345&gt; ipconfig$ ping 127.0.0.1PING 127.0.0.1 (127.0.0.1): 56 data bytes64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.090 ms Let’s just Follow me.아래와 같이 Caution으로 시작하는 주의 부분이 있지 않는이상 코드만 따라가도 문제 없음. Caution이 아래 부분은 요로쿵 조로쿵 해서 주의가 필요 하다.꼭 봐야 하는건 아니지만, 소스만 보고했다가 안되면 1순위로 보라는 의미 1console.warn(`Caution`);","categories":[{"name":"Blog","slug":"Blog","permalink":"http://khackskjs.github.io/categories/Blog/"}],"tags":[{"name":"ground rule","slug":"ground-rule","permalink":"http://khackskjs.github.io/tags/ground-rule/"}]},{"title":"블로그를 시작하며","slug":"starting-blog","date":"2017-06-21T12:44:18.000Z","updated":"2017-07-26T12:30:53.000Z","comments":true,"path":"2017/06/21/starting-blog/","link":"","permalink":"http://khackskjs.github.io/2017/06/21/starting-blog/","excerpt":"","text":"블로그. 일하다 필요에 의해 혹은 호기심으로 공부한 것들은 자주 접하지 않으면 얼마 지나지 않아 사라져 버린다. (나의 기억력은 RAM이라 불리우는…)그리고 대충 정리해서 두다보면 여기저기 분산되어 유실되거나, 추후 보면 알아 볼 수가 없다.이런 필요에 의해 뭔가 일원화된 정리방법이 필요했다.그럼에도 불구하고 이쁘게 혹은 보기 좋게 글을 작성하기가 쉽지 않을 것 같아 보여 블로그는 엄두를 내지 못하고 있었다. 궁하면 통하는법. 나의 요구는 다음과 같았다. source code 적용 가능 깔끔한 정리가 가능하되, 깔끔함을 위한 시간&amp;노력 대비 결과가 좋아야 함 Comment - 소통 오픈형 마침내 정리 할 방법을 찾았다. Markdown을 어느정도 익히고(정말 간단한 문법들), hexo를 이용하면 정적사이트를 생성 할 수 있다.그렇게 생성한 페이지는 github pages로 호스팅해서 블로그로 운영 할 수 있다.Comment는 정적 사이트가 아니므로 Disqus에 붙여 해결 할 수 있다. 뭔가 엄청 복잡하고 어려워 보이는데.. 실은 별거없이 **블로그 시작하기**를 따라하면 ‘나도 블로거 1일차’.(comment 붙이는데 너무 오래 걸렸다! 검색만 잘 하면 한글로 설명해놓은 블로거들이 있어 쉬움에도 불구하고..) 그럼 조금 더 쉽게 밥상에 숟가락을 얻기 위해 나의 포스팅에 적용 될 Ground Rule 을 알아 보자.","categories":[{"name":"Blog","slug":"Blog","permalink":"http://khackskjs.github.io/categories/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://khackskjs.github.io/tags/blog/"}]}]}